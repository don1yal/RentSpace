package com.rentspace.userservice.dto;

import com.rentspace.userservice.util.Role;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.*;
import lombok.Data;

@Data
@Schema(
    name = "Users",
    description = "Schema to hold users information"
)
public class UserDto {
    @Schema(
        description = "User ID", example = "1"
    )
    private Long id;

    @Schema(
         description = "User name", example = "John Doe"
    )
    @NotBlank(message = "Name cannot be empty.")
    @Size(min = 2, max = 50, message = "Name must be between 2 and 50 characters")
    private String name;

    @Schema(
        description = "User email", example = "5Xl7g@example.com"
    )
    @NotBlank(message = "Email cannot be empty.")
    @Email(message = "Email should be valid.")
    private String email;

    @Schema(
        description = "User password", example = "ldfn5454,."
    )
    @NotBlank(message = "Password cannot be empty.")
    @Size(min = 8, max = 50, message = "Password must be between 8 and 50 characters")
    private String password;

    @Schema(
        description = "User mobile number", example = "1234567890"
    )
    @NotEmpty(message = "User number cannot be null or empty")
    @Pattern(regexp = "(^$|[0-9]{11})", message = "Account number must be 10 digits")
    private String mobileNumber;

    @Schema(
        description = "User role", example = "ADMIN"
    )
    @NotNull(message = "Role cannot be null.")
    private Role role;
}
